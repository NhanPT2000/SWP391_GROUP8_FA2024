@model IEnumerable<DataObject.PlannedService>
@{
    Layout = null;
}
<body>
    <section id="PlannedServices" class="dashboard-section" style="display: none;">
        <h2>Customer's Booked Services</h2>
        <div id="serviceFormContainer"></div>
        <table id="servicesTable">
            <thead>
                <tr>
                    <th>Service</th>
                    <th>Service Image</th>
                    <th>Customer</th>
                    <th>Pet</th>
                    <th>Pet Image</th>
                    <th>Facility</th>
                    <th>Facility Image</th>
                    <th>Price</th>
                    <th>Book Date</th>
                    <th>Finish Date</th>
                    <th>Usage Times</th>
                    <th>Status</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null)
                {
                    foreach (var ps in Model)
                    {
                        <tr data-id="@ps.PlannedServiceId">
                            <td>@ps.Service.ServiceName</td>
                            <td><img src="@Url.Action("GetServiceImage", "Admin", new { fileName = ps.Service.Image })" alt="Service Image" width="50" /></td>
                            <td>@ps._Member.UserName</td>
                            <td>@ps.Case.Pet.PetName</td>
                            <td><img src="@Url.Action("GetPetImage", "User", new { fileName = ps.Case.Pet.Image })" alt="Pet Image" width="50"></td>
                            <td>@ps.Case.Facility.FacilityName</td>
                            <td><img src="@Url.Action("GetFacilityImage", "Admin", new { fileName = ps.Case.Facility.Image })" width="50" /></td>
                            <td>@ps.Price vnd</td>
                            <td>@ps.Case.StartTime.ToString("dd-mm-yyyy")</td>
                            <td>@ps.EndTime.ToString("dd-mm-yyyy")</td>
                            <td>@ps.PlannedUnits times</td>
                            <td>@(ps.IsCofirmed != true ? "Pending" : "Approved")</td>
                            <td>
                                @if(ps.IsCofirmed != true){
                                    <button id="confirmBtn" data-id="@ps.PlannedServiceId">Approve</button>
                                }
                                else
                                {
                                    <button id="unconfirmBtn" data-id="@ps.PlannedServiceId">Unconfirm</button>
                                }
                                <button id="deleteServiceBtn" data-id="@ps.PlannedServiceId">Delete</button>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </section>
</body>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        
        $(document).on('click', '.deleteServiceBtn', function () {
            var plannedServiceId = $(this).data('id');
            if (confirm("Do you want to delete this planned service?")) {
                $.ajax({
                    url: '@Url.Action("DeletePlannedService", "Admin")',
                    type: 'GET',
                    data: { id: plannedServiceId },
                    success: function (response) {
                        loadServices();
                    },
                    error: function () {
                        alert('Failed to delete the service.');
                    }
                });
            }
        });

        $(document).on('click', '.confirmBtn', function () {
            var plannedServiceId = $(this).data('id');
            if (confirm("Do you want to confirm this planned service?")) {
                $.ajax({
                    url: '@Url.Action("ConfirmedPlannedService", "Admin")',
                    type: 'GET',
                    data: { id: plannedServiceId },
                    success: function (response) {
                        loadServices();
                    },
                    error: function () {
                        alert('Failed to update the service.');
                    }
                });
            }
        });

        $(document).on('click', '.unconfirmBtn', function () {
            var plannedServiceId = $(this).data('id');
            if (confirm("Do you want to remove confirmation from this planned service?")) {
                $.ajax({
                    url: '@Url.Action("UnconfirmedPlannedService", "Admin")',
                    type: 'GET',
                    data: { id: plannedServiceId },
                    success: function (response) {
                        loadServices();
                    },
                    error: function () {
                        alert('Failed to update the service.');
                    }
                });
            }
        });

        function loadServices() {
            $.ajax({
                url: '@Url.Action("PlannedServiceSection", "Admin")',
                type: 'GET',
                success: function (data) {
                    $('#servicesTable tbody').html(data);
                },
                error: function () {
                    alert('Failed to load planned services.');
                }
            });
        }
    });
</script>
